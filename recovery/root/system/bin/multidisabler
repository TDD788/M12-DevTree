#!/sbin/sh

scr_wdth=50

debug_print() {
  if [ "$DEBUG" = true ]; then
    echo "$1"
  fi
}

print_full_bar() {
  echo "$(printf '%*s\n' "$scr_wdth" | tr ' ' '=')"
}

print_justified() {
  local str="$1"
  local str_len="${#str}"
  local padding_len=$(( ($scr_wdth - $str_len - 2) / 2))
  local ljust="$(printf '%*s' "$padding_len")"
  local rjust="$(printf '%*s' "$((padding_len + $str_len % 2))")"

  echo "=$ljust$str$rjust="
}

md5() {
  md5sum -b "$1" | cut -d ' ' -f 1
}

file_changed() {
  local file="$1"
  local old_md5="$2"
  local new_md5=$(md5 "$file")

  if [ "$new_md5" != "$old_md5" ]; then
    debug_print " -     ...modified."
  else
    debug_print " -     ...unchanged."
  fi
}

rm_from_manifest() {
  local service="$1"
  local md5
  local i
  local path_extra=''

  if [ "$major" -gt 9 ]; then
    path_extra='\.hardware'
  fi

  for i in /vendor/etc/vintf/manifest.xml \
	   "$ANDROID_ROOT"/system/etc/vintf/compatibility_matrix.device.xml \
	   /vendor/etc/vintf/manifest/vaultkeeper_manifest.xml; do
    if [ -f "$i" ]; then
      echo " -   Found $i."
      md5=$(md5 "$i")
      sed -i -e "/<hal format=\"hidl\">/{N;/<name>vendor\.samsung${path_extra}\.security\.$service<\/name>/{:loop;N;/<\/hal>/!bloop;d}}" "$i"
      file_changed "$i" "$md5"
    fi
  done
}

disable_fbe() {
  local md5
  local i

  echo " - Disabling file-based encryption (FBE) for /data..."

  for i in /vendor/etc/fstab.exynos* \
	   /vendor/etc/fstab.qcom*; do
    if [ -f "$i" ]; then
      echo " -   Found $i."
      md5=$(md5 "$i")
      sed -i -e 's/^\([^#].*\)fileencryption=[^,]*\(.*\)$/# &\n\1encryptable\2/g' "$i"
      file_changed "$i" "$md5"
    fi
  done
}

disable_vaultkeeper() {
  local md5
  local i

  echo " - Disabling vaultkeeperd..."

  if [ "$major" -gt 9 ]; then
    for i in "$ANDROID_ROOT"/system/etc/init/vk*.rc /vendor/etc/init/vk*.rc /vendor/etc/init/vaultkeeper*; do
      if [ -f "$i" ]; then
        echo " -   Found $i."
        md5=$(md5 "$i")
        sed -i -e 's/^[^#].*$/# &/' "$i"
        file_changed "$i" "$md5"
      fi
    done
  else
    sed -i -e 's/^[^#].*vaultkeeper.*$/# &/' \
           -e '/\/system\/bin\/vaultkeeperd/,/^#?$/s/^[^#]*$/#&/' "$ANDROID_ROOT"/init.rc
  fi

  rm_from_manifest vaultkeeper

  for i in "$ANDROID_ROOT"/system /vendor; do
    if [ -f "$i"/bin/vaultkeeperd ]; then
      echo " -   Found $i/bin/vaultkeeperd. Disabling..."
      chmod 0 "$i"/bin/vaultkeeperd
    fi
  done
}

disable_recovery_patching() {
  echo " "
  echo "Disabling recovery restoration..."
  echo " "
  
  dd if=/dev/block/by-name/boot of=/tmp/old-boot.img
  mkdir -p /tmp/unpacked_boot
  cd /tmp/unpacked_boot
  magiskboot unpack -h /tmp/old-boot.img
  magiskboot repack /tmp/old-boot.img /tmp/new-boot.img
  cd -
  rm -rf /tmp/unpacked_boot
  dd if=/tmp/new-boot.img of=/dev/block/by-name/boot
}

disable_cass() {
  local md5
  local i

  echo " - Disabling cass..."

  for i in "$ANDROID_ROOT"/init.rc /vendor/init/cass.rc /vendor/etc/init/cass.rc; do
    if [ -f "$i" ]; then
      echo " -   Found $i. Disabling..."
      md5=$(md5 "$i")
      sed -i -e 's/^[^#].*cass.*$/# &/' \
             -e '/\/(system|vendor)\/bin\/cass/,/^#?$/s/^[^#]*$/#&/' "$i"
      file_changed "$i" "$md5"
    fi
  done
}

disable_proca() {
  local md5
  local i

  echo " - Disabling process authentication..."

  for i in /vendor/etc/init/pa_daemon*.rc; do
    if [ -f "$i" ]; then
      echo " -   Found $i. Disabling..."
      sed -i -e 's/^[^#]/# &/' "$i"
      file_changed "$i" "$md5"
    fi
  done

  rm_from_manifest proca
}

disable_wsm() {
  echo " - Disabling wsm..."
  rm_from_manifest wsm
}

disable_recovery_restoration() {
  local r=recovery-from-boot.p
  local found=false
  local i

  echo " - Disabling restoration of stock recovery..."

  for i in "$ANDROID_ROOT" "$ANDROID_ROOT"/system /vendor; do
    if [ -f "$(find "$i" -maxdepth 1 -type f -name "*recovery*")" ]; then
      echo " -   Found recovery file in $i. Disabling..."
      rm -rf "$(find "$i" -maxdepth 1 -type f -name "*recovery*")"
      echo " -     ...succeeded."
      rm -rf /vendor/etc/init/vendor_flash_recovery.rc
      rm -rf /vendor/bin/install-recovery.sh
      echo '#!/vendor/bin/sh' > /vendor/bin/install-recovery.sh
      echo 'echo "No more messing with Samsung"' >> /vendor/bin/install-recovery.sh
      found=true
      break
    else
      echo " -   No stock recovery patcher found in $i."
    fi
  done
}

patch_libbluetooth() {
  if [ "$major" -ne 10 ]; then
    return
  fi

  local f="$ANDROID_ROOT"/system/lib64/libbluetooth.so
  local tf=/tmp/f

  echo " - Bluetooth fix requested via renamed zip."
  echo " - Attempting to patch $f..."
  echo "     This may take a while."

  if echo "$device" | grep -E '[GN]9[67][03567][UW0]|F90(0[FN]|7[BN])|T86[05]' >/dev/null; then
    substitute='s/88000054691180522925c81a69000037e0030032/04000014691180522925c81a69000037e0031f2a/'
  else
    substitute='s/c8000034f4031f2af3031f2ae8030032/1f2003d5f4031f2af3031f2ae8031f2a/'
  fi

  xxd -p "$f" | tr -d '\n ' | sed -e "$substitute" | xxd -rp > "$tf"

  if ! cmp "$tf" "$f" >/dev/null && [ "$(stat -c '%s' "$tf")" -eq "$(stat -c '%s' "$f")" ]; then
    echo " -   Patching succeeded."
    touch -r "$f" "$tf"
    chmod 644 "$tf"
    mv "$tf" "$f"
  else
    echo " -   Patching failed. No change made."
    rm -f "$tf"
  fi
}

echo " "
print_full_bar
print_justified "Multi-disabler v4.0 for Samsung devices"
print_justified "running Android 9 or later."
print_justified "by TheDarkDeath788"
print_full_bar
echo " "

os=$(getprop ro.build.version.release)
major="${os%%.*}"
bl=$(getprop ro.boot.bootloader)
dp=$(getprop ro.boot.dynamic_partitions)

fw="${bl:$((${#bl} - 4)):4}"

device="${bl:0:$((${#bl} - 8))}"
mft=$(getprop ro.product.manufacturer | tr '[:upper:]' '[:lower:]')

if [ "$mft" != "samsung" ]; then
  echo " - Device appears not to be made by Samsung."
  fatal=true
elif [ -z "$device" ]; then
  echo " - Could not determine device model."
  fatal=true
elif [ "$major" -lt 9 ]; then
  echo " - This software is incompatible with Android $major."
  fatal=true
fi

if [ -n "$fatal" ]; then
  echo " - Installation aborted."
  echo " "
  exit 1
fi

echo " - Detected a $device device with a $fw bootloader."
echo " - The environment appears to be Android $major."
echo " "

e2fsck -fp /dev/block/mapper/system
e2fsck -fp /dev/block/mapper/vendor
e2fsck -fp /dev/block/mapper/product
e2fsck -fp /dev/block/mapper/odm

echo " - Mounting $ANDROID_ROOT..."
mount "$ANDROID_ROOT" 2>/dev/null
mount -o remount,rw "$ANDROID_ROOT" 2>/dev/null

if ! mount | grep "$ANDROID_ROOT" >/dev/null; then
  ANDROID_ROOT=/system_root
  echo " -   Attempt failed. Mounting at $ANDROID_ROOT..."
  mount -o rw "$ANDROID_ROOT"
  if ! mount | grep "$ANDROID_ROOT" >/dev/null; then
    echo " -   Even that attempt failed. Aborting..."
    exit 2
  fi
fi

echo " - Mounting /vendor..."
mount /vendor
mount -o remount,rw /vendor

if ! mount | grep /vendor >/dev/null; then
  echo " -   Mount failed. Aborting..."
  exit 3
fi

disable_recovery_restoration
disable_recovery_patching
disable_fbe

if [ "$dp" != true ]; then
  disable_vaultkeeper
  disable_proca
  [ "$ZIPNAME" != "${ZIPNAME/_btfix//}" ] && [ "$major" -gt 9 ] && patch_libbluetooth
fi

if [ "$major" -gt 9 ]; then
  disable_wsm
  if echo "$device" | grep -E 'G97([035][FNUW0]|7[BNUW])|N97([05][FNUW0]|6[BNQ0]|1N)|T860|F90(0[FN]|7[BN])|M[23]15F' >/dev/null; then
    disable_cass
  fi
fi

echo " - Unmounting /vendor..."
umount /vendor
echo " - Unmounting $ANDROID_ROOT..."
umount "$ANDROID_ROOT"

echo " "
echo " - Finished."
echo " "

